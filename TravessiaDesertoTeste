import org.junit.Before;
import org.junit.After;
import org.junit.Test;
import static org.junit.Assert.*;


public class TravessiaDesertoTest {

	TravessiaDeserto jogo;
	
	//AVANÇAR
/*
	@Before
	public void setUpA() {
		jogo = new TravessiaDeserto();

	}

	@Test
	public void testAvancar() {

		jogo.inicializaJogo();

		int pos = jogo.getPosicao();
		int fuel = jogo.getFuel();

		if (fuel<1) {  				// NAO PODE AVANÇAR
			jogo.avancar();
			assertEquals(pos, jogo.getPosicao());
			assertEquals(fuel, jogo.getFuel());
		}
		else if (pos>9) {			// NAO PODE AVANÇAR
			jogo.avancar();
			assertEquals(pos, jogo.getPosicao());
			assertEquals(fuel, jogo.getFuel());
		}
		else {						// DEVE AVANÇAR
			jogo.avancar();
			assertEquals(pos + 1, jogo.getPosicao());
			assertEquals(fuel - 1, jogo.getFuel());
		}

	}
	
	
	@After
	public void tearDownA() {
		jogo = null;
	}
	

	
	//VOLTAR
	
	@Before
	public void setUpV() {
		jogo = new TravessiaDeserto();

	}

	@Test
	public void testVoltar() {

		jogo.inicializaJogo();

		int pos = jogo.getPosicao();
		int fuel = jogo.getFuel();

		if (fuel<1) {  				// NAO PODE VOLTAR
			jogo.voltar();
			assertEquals(pos, jogo.getPosicao());
			assertEquals(fuel, jogo.getFuel());
		}
		else if (pos==0) {			// NAO PODE VOLTAR
			jogo.voltar();
			assertEquals(pos, jogo.getPosicao());
			assertEquals(fuel, jogo.getFuel());
		}
		else {						// DEVE VOLTAR 
			jogo.voltar();
			assertEquals(pos - 1, jogo.getPosicao());
			assertEquals(fuel - 1, jogo.getFuel());
		}

	}
	
	@After
	public void tearDownV() {
		jogo = null;
	}
	

	
	//INICIALIZA JOGO
	
	@Before
	public void setUpI() {
		jogo = new TravessiaDeserto();

	}

	@Test
	public void testINICIALIZA() {

		jogo.inicializaJogo();
		
		assertEquals(0, jogo.getPosicao());
		assertEquals(6, jogo.getFuel());
	

	}
	
	@After
	public void tearDownI() {
		jogo = null;
	}
	
	*/
	
	//CARREGAR
	
		@Before
		public void setUpC() {
			jogo = new TravessiaDeserto();

		}

		@Test
		public void testCarregar() {

	//		jogo.inicializaJogo();
		
			int fuel = jogo.getFuel();
			int [] estoque = jogo.getMapa();
	
	/*		
			if (fuel>5) {			//NAO PODE CARREGAR
				jogo.carregar();
				assertEquals(fuel, jogo.getFuel());
			}
			if (jogo.getPosicao()==0) {		//DEVE REPOR 6 NO FUEL
//				jogo.descarregar();
//				jogo.descarregar();
				jogo.carregar();
				assertEquals(6, jogo.getFuel());
			}
			

			for (int i=1; i<10; i++) {			//NAO PODE CARREGAR
				if (estoque[i]==0) {
				jogo.carregar();
				assertEquals(fuel, jogo.getFuel());
				System.out.println("nao"+i);
				}
			}
*/
			estoque[2]=1;
			fuel=0;  // parei aqui tah errado
			
			for (int i=0; i<10; i++) {
				
				if (estoque[i]>0) {
					jogo.carregar();
					assertEquals(fuel+1, jogo.getFuel());
					System.out.println("carregou no "+i);
				}
				else {
					System.out.println("nao tem gasolina no "+i);
				}
				
			}
		
		} 
		
		@After
		public void tearDownC() {
			jogo = null;
		}
	
}
